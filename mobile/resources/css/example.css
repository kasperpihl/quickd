/******************************************************************
VARIABLES
******************************************************************/
/******************************************************************
IMPORTS
******************************************************************/
body, div, dl, dt, dd, ul, ol, li, h1, h2, h3,
h4, h5, h6, pre, code, form, fieldset, legend,
input, textarea, p, blockquote, th, td {
  margin: 0;
  padding: 0; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

fieldset, img {
  border: 0; }

address, caption, cite, code,
dfn, em, strong, th, var {
  font-style: normal;
  font-weight: normal; }

li {
  list-style: none; }

caption, th {
  text-align: left; }

h1, h2, h3, h4, h5, h6 {
  font-size: 100%;
  font-weight: normal; }

q:before,
q:after {
  content: ""; }

abbr, acronym {
  border: 0;
  font-variant: normal; }

sup {
  vertical-align: text-top; }

sub {
  vertical-align: text-bottom; }

input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit; }

*:focus {
  outline: none; }

/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
html, body {
  font-family: "Helvetica Neue", HelveticaNeue, "Helvetica-Neue", Helvetica, "BBAlpha Sans", sans-serif;
  font-weight: normal;
  position: relative;
  -webkit-text-size-adjust: none; }

body.x-desktop {
  overflow: hidden; }

*, *:after, *:before {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-user-select: none;
  -webkit-touch-callout: none;
  -webkit-user-drag: none; }

.x-ios.x-tablet .x-landscape * {
  -webkit-text-stroke: 1px transparent; }

body {
  font-size: 104%; }

body.x-android.x-phone {
  font-size: 116%; }

body.x-android.x-phone.x-silk {
  font-size: 130%; }

body.x-ios.x-phone {
  font-size: 114%; }

body.x-desktop {
  font-size: 114%; }

input, textarea {
  -webkit-user-select: text; }

.x-hidden-visibility {
  visibility: hidden !important; }

.x-hidden-display {
  display: none !important; }

.x-hidden-offsets {
  position: absolute !important;
  left: -10000em;
  top: -10000em;
  visibility: hidden; }

.x-fullscreen {
  position: absolute !important; }

.x-desktop .x-body-stretcher {
  margin-bottom: 0px; }

.x-mask {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  height: 100%;
  z-index: 10;
  display: -webkit-box;
  display: box;
  -webkit-box-align: center;
  box-align: center;
  -webkit-box-pack: center;
  box-pack: center;
  background: rgba(0, 0, 0, 0.3) center center no-repeat; }
  .x-mask.x-mask-gray {
    background-color: rgba(0, 0, 0, 0.5); }
  .x-mask.x-mask-transparent {
    background-color: transparent; }
  .x-mask .x-mask-inner {
    background: rgba(0, 0, 0, 0.25);
    color: #fff;
    text-align: center;
    padding: .4em;
    font-size: .95em;
    font-weight: bold;
    -webkit-border-radius: 0.5em;
    border-radius: 0.5em; }
  .x-mask .x-loading-spinner-outer {
    display: -webkit-box;
    display: box;
    -webkit-box-orient: vertical;
    box-orient: vertical;
    -webkit-box-align: center;
    box-align: center;
    -webkit-box-pack: center;
    box-pack: center;
    width: 100%;
    min-width: 8.5em;
    height: 8.5em; }
  .x-mask.x-indicator-hidden .x-loading-spinner-outer {
    display: none; }
  .x-mask .x-mask-message {
    text-shadow: rgba(0, 0, 0, 0.5) 0 -0.08em 0;
    -webkit-box-flex: 0 !important;
    max-width: 13em;
    min-width: 8.5em; }

.x-draggable {
  z-index: 1; }

.x-dragging {
  opacity: 0.7; }

.x-panel-list {
  background-color: #eaf6fe; }

.x-html {
  -webkit-user-select: auto;
  -webkit-touch-callout: inherit;
  line-height: 1.5;
  color: #333;
  font-size: .8em;
  padding: 1.2em; }
  .x-html body {
    line-height: 1.5;
    font-family: "Helvetica Neue", Arial, Helvetica, sans-serif;
    color: #333333;
    font-size: 75%; }
  .x-html h1, .x-html h2, .x-html h3, .x-html h4, .x-html h5, .x-html h6 {
    font-weight: normal;
    color: #222222; }
    .x-html h1 img, .x-html h2 img, .x-html h3 img, .x-html h4 img, .x-html h5 img, .x-html h6 img {
      margin: 0; }
  .x-html h1 {
    font-size: 3em;
    line-height: 1;
    margin-bottom: 0.50em; }
  .x-html h2 {
    font-size: 2em;
    margin-bottom: 0.75em; }
  .x-html h3 {
    font-size: 1.5em;
    line-height: 1;
    margin-bottom: 1.00em; }
  .x-html h4 {
    font-size: 1.2em;
    line-height: 1.25;
    margin-bottom: 1.25em; }
  .x-html h5 {
    font-size: 1em;
    font-weight: bold;
    margin-bottom: 1.50em; }
  .x-html h6 {
    font-size: 1em;
    font-weight: bold; }
  .x-html p {
    margin: 0 0 1.5em; }
    .x-html p .left {
      display: inline;
      float: left;
      margin: 1.5em 1.5em 1.5em 0;
      padding: 0; }
    .x-html p .right {
      display: inline;
      float: right;
      margin: 1.5em 0 1.5em 1.5em;
      padding: 0; }
  .x-html a {
    text-decoration: underline;
    color: #0066cc; }
    .x-html a:visited {
      color: #004c99; }
    .x-html a:focus {
      color: #0099ff; }
    .x-html a:hover {
      color: #0099ff; }
    .x-html a:active {
      color: #bf00ff; }
  .x-html blockquote {
    margin: 1.5em;
    color: #666666;
    font-style: italic; }
  .x-html strong, .x-html dfn {
    font-weight: bold; }
  .x-html em, .x-html dfn {
    font-style: italic; }
  .x-html sup, .x-html sub {
    line-height: 0; }
  .x-html abbr, .x-html acronym {
    border-bottom: 1px dotted #666666; }
  .x-html address {
    margin: 0 0 1.5em;
    font-style: italic; }
  .x-html del {
    color: #666666; }
  .x-html pre {
    margin: 1.5em 0;
    white-space: pre; }
  .x-html pre, .x-html code, .x-html tt {
    font: 1em "andale mono", "lucida console", monospace;
    line-height: 1.5; }
  .x-html li ul, .x-html li ol {
    margin: 0; }
  .x-html ul, .x-html ol {
    margin: 0 1.5em 1.5em 0;
    padding-left: 1.5em; }
  .x-html ul {
    list-style-type: disc; }
  .x-html ol {
    list-style-type: decimal; }
  .x-html dl {
    margin: 0 0 1.5em 0; }
    .x-html dl dt {
      font-weight: bold; }
  .x-html dd {
    margin-left: 1.5em; }
  .x-html table {
    margin-bottom: 1.4em;
    width: 100%; }
  .x-html th {
    font-weight: bold; }
  .x-html thead th {
    background: #c3d9ff; }
  .x-html th, .x-html td, .x-html caption {
    padding: 4px 10px 4px 5px; }
  .x-html table.striped tr:nth-child(even) td,
  .x-html table tr.even td {
    background: #e5ecf9; }
  .x-html tfoot {
    font-style: italic; }
  .x-html caption {
    background: #eeeeee; }
  .x-html .quiet {
    color: #666666; }
  .x-html .loud {
    color: #111111; }
  .x-html ul li {
    list-style-type: circle; }
  .x-html ol li {
    list-style-type: decimal; }

.x-video {
  background-color: #000; }

.x-sortable .x-dragging {
  opacity: 1;
  z-index: 5; }

.x-layout-card-item {
  background: #eeeeee; }

.x-map {
  background-color: #edeae2; }
  .x-map * {
    -webkit-box-sizing: content-box;
    box-sizing: content-box; }

.x-mask-map {
  background: transparent !important; }

/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.Toolbar
 */
/**
 * @var {color} $toolbar-base-color
 * The primary color variable from which toolbars derive their light and dark UIs.
 */
/**
 * @var {measurement} $toolbar-spacing
 * Space between items in a toolbar (like buttons and fields)
 */
/**
 * @var {string} $toolbar-gradient
 * Background gradient style for toolbars.
 */
/**
 * @var {boolean} $include-toolbar-uis
 * Optionally disable separate toolbar UIs (light and dark).
 */
/**
 * Includes default toolbar styles.
 */
/**
 * Creates a theme UI for toolbars.
 *
 *     // SCSS
 *     @include sencha-toolbar-ui('sub', #58710D, 'glossy');
 *
 *     // JS
 *     var myTb = new Ext.Toolbar({title: 'My Green Glossy Toolbar', ui: 'sub'})
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $color Base color for the UI.
 * @param {string} $gradient: $toolbar-gradien Background gradient style for the UI.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.Button
 */
/**
 * @var {measurement} $button-height Default height for buttons.
 */
/**
 * @var {measurement} $button-radius Default border-radius for buttons.
 */
/**
 * @var {measurement} $button-stroke-weight Default border width for buttons.
 */
/**
 * @var {string} $button-gradient Default gradient for buttons.
 */
/**
 * @var {string} $toolbar-icon-size Default size (width and height) for toolbar icons.
 */
/**
 * @var {boolean} $include-button-uis Optionally disable separate button UIs, including action, confirm, and decline.
 */
/**
 * @var {boolean} $include-button-highlights Optionally disable special CSS3 effects on buttons including gradients, text-shadows, and box-shadows.
 */
/**
 * Includes default button styles.
 */
/**
 * Creates a theme UI for buttons.
 * Also automatically generates UIs for {ui-label}-round and {ui-label}-small.
 *
 *     // SCSS
 *     @include sencha-button-ui('secondary', #99A4AE, 'glossy');
 *
 *     // JS
 *     var cancelBtn = new Ext.Button({text: 'Cancel', ui: 'secondary'});
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $color Base color for the UI.
 * @param {string} $gradient Default gradient for the UI.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.tab.Bar
 */
/**
 * @var {boolean} $include-tabbar-uis Optionally disable separate tabbar UIs (light and dark).
 */
/**
 * @var {boolean} $include-top-tabs
 * Optionally exclude top tab styles by setting to false.
 */
/**
 * @var {boolean} $include-bottom-tabs
 * Optionally exclude bottom tab styles by setting to false.
 */
/**
 * @var {color} $tabs-light
 * Base color for "light" UI tabs.
 */
/**
 * @var {color} $tabs-light-active
 * Active color for "light" UI tabs.
 */
/**
 * @var {color} $tabs-dark
 * Base color for "dark" UI tabs.
 */
/**
 * @var {color} $tabs-dark-active
 * Active color for "dark" UI tabs.
 */
/**
 * @var {string} $tabs-bar-gradient
 * Background gradient style for tab bars.
 */
/**
 * @class Ext.tab.Tab
 */
/**
 * @var {string} $tabs-bottom-radius
 * Border-radius for bottom tabs.
 */
/**
 * @var {string} $tabs-bottom-icon-size
 * Icon size for bottom tabs
 */
/**
 * @var {string} $tabs-bottom-active-gradient
 * Background gradient style for active bottom tabs.
 */
/**
 * @var {boolean} $include-tab-highlights
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * Includes default tab styles.
 *
 * @member Ext.tab.Bar
 */
/**
 * Creates a theme UI for tabbar/tab components.
 *
 *     // SCSS
 *     @include sencha-button-ui('pink', #333, 'matte', #AE537A);
 *
 *     // JS
 *     var tabs = new Ext.tab.Panel({
 *        tabBar: {
 *          ui: 'pink',
 *          dock: 'bottom',
 *          layout: { pack: 'center' }
 *        },
 *        ...
 *     });
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $bar-color Base color for the tab bar.
 * @param {string} $bar-gradient Background gradient style for the tab bar.
 * @param {color} $tab-active-color Background-color for active tab icons.
 *
 * @member Ext.tab.Bar
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.carousel.Indicator
 */
/**
 * @var {measurement} $carousel-indicator-size Size (width/height) of carousel indicator dots.
 */
/**
 * @var {measurement} $carousel-indicator-spacing
 * Amount of space between carousel indicator dots.
 */
/**
 * @var {measurement} $carousel-track-size Size of the track the carousel indicator dots are in.
 */
/**
 * Creates a theme UI for carousel indicator components.
 *
 * @param {string} $ui-label The name of the UI being created.
 *   Can not included spaces or special punctuation (used in class names)
 * @param {color} $color Base color for the UI.
 * @param {string} $gradient Default gradient for the UI.
 * @param {color} $active-color Active color for the UI.
 * @param {string} $active-gradient Active gradient for the UI.
 */
/**
 * @class Ext.carousel.Carousel
 */
/**
 * Includes basic carousel formatting.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.dataview.IndexBar
 */
/**
 * @var {measurement} $index-bar-width
 * Width of the index bar.
 */
/**
 * @var {color} $index-bar-bg-color
 * Background-color of the index bar.
 */
/**
 * @var {color} $index-bar-color
 * Text color of the index bar.
 */
/**
 * Includes default index bar styles.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.dataview.List
 */
/**
 * @var {color} $list-color
 * Text color for list rows.
 */
/**
 * @var {color} $list-bg-color
 * Background-color for list rows.
 */
/**
 * @var {color} $include-list-highlights
 * Optionally disable all list gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $list-zebrastripe
 * Optionally zebra-stripe the list (alternating background colors).
 */
/**
 * @var {color} $list-pressed-color
 * Background-color for pressed list rows.
 */
/**
 * @var {color} $list-active-color
 * Background-color for selected list rows.
 */
/**
 * @var {string} $list-active-gradient
 * Gradient style for selected list rows.
 */
/**
 * @var {color} $list-header-bg-color
 * Background-color for list header rows (in grouped lists).
 */
/**
 * @var {string} $list-header-gradient
 * Gradient style for list header rows (in grouped lists).
 */
/**
 * @var {measurement} $list-disclosure-size
 * Default size (width/height) for disclosure icons.
 */
/**
 * @var {measurement} $list-disclosure-round-size
 * Default size (width/height) for disclosure icons in a list with a 'round' ui.
 */
/**
 * Includes default list styles.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * Includes default form slider styles.
 *
 * @member Ext.field.Slider
 */
/**
 * @var {color} $form-bg-color
 * Default background-color for forms.
 *
 * @member Ext.form.Panel
 */
/**
 * @class Ext.field.Field
 */
/**
 * @var {color} $form-field-bg-color
 * Default background-color for form fields.
 */
/**
 * @var {color} $form-light
 * Light color for form fields, mostly used on field borders.
 */
/**
 * @var {color} $form-dark
 * Dark color for form fields, mostly used on labels/text.
 */
/**
 * @var {measurement} $form-label-width
 * Default width for form labels.
 */
/**
 * @var {color} $form-label-background-color
 * The default background color for labels
 */
/**
 * @var {measurement} $form-field-height
 * Default height for form fields.
 */
/**
 * @var {measurement} $form-spacing
 * Default spacing for form fields, used for padding, etc.
 */
/**
 * @var {measurement} $form-textarea-height
 * Default height for form textareas.
 *
 * @member Ext.field.TextArea
 */
/**
 * @var {measurement} $form-thumb-size
 * Default size of "thumbs" for form sliders/toggles.
 *
 * @member Ext.field.Slider
 */
/**
 * @var {measurement} $form-toggle-size
 * Thumb size minus padding for inset thumbs like in a Toggle element.
 *
 * @member Ext.field.Toggle
 */
/**
 * @var {measurement} $form-fieldset-radius
 * Default border-radius for form fieldsets.
 *
 * @member Ext.form.FieldSet
 */
/**
 * @var {measurement} $form-slider-size
 * Height of the slider "track."
 *
 * @member Ext.field.Slider
 */
/**
 * Includes default form styles.
 *
 * @member Ext.form.Panel
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.Sheet
 */
/**
 * @var {color} $sheet-bg-color
 * Background-color for action sheets and message boxes.
 */
/**
 * @var {color} $sheet-bg-gradient
 * Background gradient style for action sheets and message boxes.
 */
/**
 * @var {measurement} $sheet-button-spacing
 * Vertical spacing between sheet buttons.
 */
/**
 * @var {measurement} $sheet-padding
 * Overall padding in a sheet.
 */
/**
 * Includes default sheet styles (also required for message box).
 */
/**
 * Includes default message box styles.
 *
 * @member Ext.MessageBox
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
/**
 * @class Ext.field.Field
 */
/**
 * @var {color} $toolbar-input-bg
 * Background-color for toolbar form fields.
 */
/**
 * @var {color} $toolbar-input-color
 * Text color for toolbar form fields.
 */
/**
 * @var {measurement} $toolbar-input-height
 * Text color for toolbar form fields.
 */
/**
 * @var {color} $toolbar-input-border-color
 * Border color for toolbar form fields.
 */
/**
 * Includes default toolbar form field styles.
 *
 * @member Ext.tab.Bar
 */
/**
 * @class Ext.LoadMask
 */
/**
 * @var {color} $loading-spinner-color
 * Background-color for the bars in the loading spinner.
 */
/**
 * Includes default loading spinner styles (for dataviews).
 */
/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
.x-img {
  background-repeat: no-repeat; }

/**
 * @class Global_CSS
 *
 * Global CSS variables and mixins of Sencha Touch.
 */
/**
 * @var {boolean} $include-html-style
 * Optionally remove included HTML styles/typography (for components with styleHtmlContent: true).
 * Styles are scoped to .x-html. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-default-icons
 * Optionally remove the default icon set which includes the following toolbar and tab bar icons: action,
 * add, arrow_down, arrow_left, arrow_right, arrow_up, bookmarks, compose, delete, download, favorites,
 * home, info, locate, maps, more, organize, refresh, reply, search, settings, star, team, time, trash,
 * and user. Set to false to reduce CSS weight.
 */
/**
 * @var {boolean} $include-form-sliders
 * Decides if default HTML styles are included (for components with styleHtmlContent: true). Class is applied to .x-html.
 */
/**
 * @var {boolean} $include-floating-panels
 * Decides whether or not to include floating panels (useful to disable for iPhone applications which do not typically have floating menus).
 */
/**
 * @var {boolean} $include-default-uis
 * Decides whether or not to include the default UIs for all components.
 */
/**
 * @var {boolean} $include-highlights=true
 * Optionally disable all gradients, text-shadows, and box-shadows. Useful for CSS debugging,
 * non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $include-border-radius
 * Optionally disable all border-radius. Useful for CSS debugging, non-performant browsers, or minimalist designs.
 */
/**
 * @var {boolean} $basic-slider
 * Optionally remove CSS3 effects from the slider component for improved performance.
 */
/**
 * @var {color} $base-color
 * The primary color variable from which most elements derive their color scheme.
 */
/**
 * @var {string} $base-gradient
 * The primary gradient variable from which most elements derive their color scheme.
 * @see background-gradient
 */
/**
 * @var {font-family} $font-family
 * The font-family to be used throughout the theme.
 * @see background-gradient
 */
/**
 * @var {color} $alert-color
 * Color used for elements like badges, errors, and "decline" UIs (eg. on buttons).
 */
/**
 * @var {color} $confirm-color
 * Color used for elements like success messages, and "confirm" UIs (eg. on buttons).
 */
/**
 * @var {color} $active-color
 * Color used for elements like selected rows, "action" UIs (eg. on buttons) and certain overlays like the picker mask.
 */
/**
 * @var {color} $neutral-color
 * Color used for the neautral `ui` for Toolbars and Tabbars.
 */
/**
 * @var {color} $page-bg-color
 * Background color for fullscreen components.
 */
/**
 * @var {measurement} $global-row-height
 * The minimum row height for items like toolbars and list items.
 */
/**
 * Background noise recipe
 * 
 * This recipe use a sass function to generate a .png file
 * 
 * Inspired by a jQuery plugin "Noisy" by Daniel Rapp @DanielRapp
 * @link https://github.com/DanielRapp/Noisy
 * 
 * Converted using Sass by Aaron Russell @aaronrussell & Philipp Bosch @philippbosch
 * @link https://gist.github.com/1021332
 * 
 * Ported to a sass gem by Antti Salonen @antsa
 * @link https://github.com/antsa/sassy_noise
 * 
 * Mixin:        background-noise
 * Function:     background_noise
 * 
 * @author Daniel Rapp @DanielRapp
 * @author Aaron Russell @aaronrussell
 * @author Philipp Bosch @philippbosch
 * @author Antti Salonen @antsa
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx
 */
/**
 *
 * @class Gradients
 * @author David Kaneda http://www.davidkaneda.com/
 *
 */
/**
 * Adds a background gradient into a specified selector.
 *
 *     @include background-gradient(#444, 'glossy');
 *
 * You can also use color-stops if you want full control of the gradient:
 *
 *     @include background-gradient(#444, color-stops(#333, #222, #111));
 *
 * @param {color} $bg-color
 * The base color of the gradient.
 *
 * @param {string/list} $type
 * The style of the gradient, one of five pre-defined options: matte, bevel, glossy, recessed, or linear:
 *
 *     @include background-gradient(red, 'glossy');
 *
 * It can also accept a list of color-stop values:;
 *
 *     @include background-gradient(black, color-stops(#333, #111, #000));
 *
 * @param {string} $direction
 * The direction of the gradient.
 */
/**
 * Blueprint grid background pattern
 * 
 * @link http://lea.verou.me/css3patterns/#blueprint-grid
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Background overlay inspired by Google Chrome modal overlay
 * 
 * @author Maxime Thirouin @MoOx maxime.thirouin@gmail.com
 */
/**
 * Striped background pattern
 * 
 * @link http://lea.verou.me/css3patterns/
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com @davidkaneda for the sass mixin
 */
/**
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#tartan
 *
 * @author Marta Armada http://swwweet.com/ for the original pattern
 * @author Maxime Thirouin maxime.thirouin@gmail.com @MoOx for the sass mixin
 */
/**
 * Carbon Fiber background pattern
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author David Kaneda http://www.davidkaneda.com/ for the Sass mixin
 *
 * @link http://lea.verou.me/css3patterns/
 *
 */
/**
 * Striped background patterns
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#horizontal-stripes
 * @link http://lea.verou.me/css3patterns/#vertical-stripes
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Cicada background pattern
 *
 * @link http://lea.verou.me/css3patterns/#cicada-stripes
 *
 * @author Randy Merril http://forthedeveloper.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Tablecloth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#tablecloth
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Lined paper background pattern
 *
 * @link http://lea.verou.me/css3patterns/#lined-paper
 *
 * @author Sarah Backhouse http://www.jadu.net/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Madras background pattern
 *
 * Before compass 0.11.5, you need to add
 * Compass::BrowserSupport.add_support("repeating-linear-gradient", "webkit", "moz", "o", "ms")
 * To your configuration (config.rb)
 * @see https://github.com/chriseppstein/compass/issues/401
 *
 * @link http://lea.verou.me/css3patterns/#madras
 *
 * @author Divya Manian http://nimbupani.com/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 * Checkerboard background pattern
 *
 * @link http://lea.verou.me/css3patterns/#checkerboard
 * @link http://lea.verou.me/css3patterns/#diagonal-checkerboard
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Houndstooth background pattern
 *
 * @link http://lea.verou.me/css3patterns/#houndstooth
 *
 * @author Antoine Bernier http://abernier.name for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * Polkadot background pattern
 *
 * @link http://lea.verou.me/css3patterns/#polka-dot
 *
 * @author Lea Verou http://lea.verou.me/ for the original pattern
 * @author Mason Wendell mason@canarypromo.com @canarymason for the sass mixin
 */
/**
 *
 * @class Color
 * @author David Kaneda - http://www.davidkaneda.com
 *
 */
/**
 * Returns the brightness (out of 100) of a specified color.
 * @todo explain why this is useful
 * @param {color} $color The color you want the brightness value of
 * @return {measurement}
 */
/**
 * Returns the luminosity for a specified color
 * @param {color} The color to check
 * @return {measurement}
 */
/**
 * Returns the contrast ratio between two colors
 * @param {color1} The color to check
 * @return {measurement}
 */
/**
 * Colors the text of an element based on lightness of its background.
 *
 *     .my-element {
 *       @include color-by-background(#fff); // Colors text black.
 *     }
 *
 *     .my-element {
 *       @include color-by-background(#fff, 40%); // Colors text gray.
 *     }
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $contrast Contrast of text color to its background.
 *
 */
/**
 * @class Global_CSS
 */
/**
 * Includes a base64-encoded icon for use within tab bars and buttons (With the component parameter iconMask: true).
 *
 *     @include pictos-iconmask('attachment');
 *
 * @param {string} $name The name of the icon to be included. This is to match the name of the icon file (located at resources/themes/images/default/pictos) without its extention (.png).
 */
/**
 * Includes the default styles for toolbar buttons, mostly used as a helper function.
 *
 * @param {color} $bg-color Base color to be used for the button.
 * @param {color} $type Gradient style for the button, will automatically use "recessed" when pressed.
 */
/**
 * Adds a small text shadow (or highlight) to give the impression of beveled text.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds a small box shadow (or highlight) to give the impression of being beveled.
 *
 * @param {string} $type Either shadow or highlight, decides whether to apply a light shadow or dark.
 */
/**
 * Adds basic styles to :before or :after pseudo-elements.
 *
 *     .my-element:after {
 *       @include insertion(50px, 50px);
 *     }
 *
 * @param {measurement} $width Height of pseudo-element.
 * @param {measurement} $height Height of pseudo-element.
 * @param {measurement} $top Top positioning of pseudo-element.
 * @param {measurement} $left Left positioning of pseudo-element.
 *
 */
/**
 * Makes an element stretch to its parent's bounds.
 */
/**
 * Bevels the text based on its background.
 *
 * @param {color} $bg-color Background color of element.
 * @see bevel-text
 *
 */
/**
 * Creates a background gradient for masked elements, based on the lightness of their background.
 *
 * @param {color} $bg-color Background color of element.
 * @param {percent} $percent Contrast of the new gradient to its background.
 * @param {percent} $style Gradient style of the gradient.
 * @see background-gradient
 *
 */
/**
 * Makes the element text overflow to use ellipsis.
 */
.x-video {
  height: 100%;
  width: 100%; }

.x-video > * {
  height: 100%;
  width: 100%;
  position: absolute; }

.x-video-ghost {
  -webkit-background-size: 100% auto;
  background: black url() center center no-repeat; }

audio {
  width: 100%; }

.left {
  float: left; }

.right {
  float: right; }

.text-left {
  text-align: left; }

.text-right {
  text-align: right; }

.text-center {
  text-align: center; }

/* For image replacement */
.ir {
  display: block;
  border: 0;
  text-indent: -999em;
  overflow: hidden;
  background-color: transparent;
  background-repeat: no-repeat;
  text-align: left;
  direction: ltr; }

.ir br {
  display: none; }

/* Hide from both screenreaders and browsers: h5bp.com/u */
.hidden {
  display: none !important;
  visibility: hidden; }

/* Hide only visually, but have it available for screenreaders: h5bp.com/v */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/* Extends the .visuallyhidden class to allow the element to be focusable when navigated to via the keyboard: h5bp.com/p */
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/* Hide visually and from screenreaders, but maintain layout */
.invisible {
  visibility: hidden; }

/* Contain floats: h5bp.com/q */
.clearfix:before, .clearfix:after {
  content: "";
  display: table; }

.clearfix:after {
  clear: both; }

.clearfix {
  zoom: 1; }

.x-toolbar {
  padding: 0 0.2em;
  overflow: hidden;
  position: relative;
  height: 2.6em; }
  .x-toolbar > * {
    z-index: 1; }
  .x-toolbar.x-docked-top {
    border-bottom: .1em solid; }
  .x-toolbar.x-docked-bottom {
    border-top: .1em solid; }
  .x-toolbar.x-docked-left {
    width: 7em;
    height: auto;
    padding: 0.2em;
    border-right: .1em solid; }
  .x-toolbar.x-docked-right {
    width: 7em;
    height: auto;
    padding: 0.2em;
    border-left: .1em solid; }

.x-title {
  line-height: 2.1em;
  font-size: 1.2em;
  text-align: center;
  font-weight: bold;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin: 0 0.3em;
  max-width: 100%; }
  .x-title .x-innerhtml {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding: 0 .3em; }

.x-toolbar-dark {
  background-image: none;
  background-color: #1468a2;
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #1e93e4), color-stop(3%, #1676b9), color-stop(100%, #11598c));
  background-image: -webkit-linear-gradient(top, #1e93e4, #1676b9 3%, #11598c);
  background-image: linear-gradient(top, #1e93e4, #1676b9 3%, #11598c);
  border-color: black; }
  .x-toolbar-dark .x-title {
    color: white;
    text-shadow: rgba(0, 0, 0, 0.5) 0 -0.08em 0; }
  .x-toolbar-dark.x-docked-top {
    border-bottom-color: black; }
  .x-toolbar-dark.x-docked-bottom {
    border-top-color: black; }
  .x-toolbar-dark.x-docked-left {
    border-right-color: black; }
  .x-toolbar-dark.x-docked-right {
    border-left-color: black; }
  .x-toolbar-dark .x-button, .x-toolbar .x-toolbar-dark .x-button,
  .x-toolbar-dark .x-field-select .x-component-outer, .x-toolbar
  .x-toolbar-dark .x-field-select .x-component-outer,
  .x-toolbar-dark .x-field-select .x-component-outer:before, .x-toolbar
  .x-toolbar-dark .x-field-select .x-component-outer:before {
    border: 1px solid #061f31;
    border-top-color: #092e47;
    color: white; }
    .x-toolbar-dark .x-button.x-button-back:before, .x-toolbar-dark .x-button.x-button-forward:before, .x-toolbar .x-toolbar-dark .x-button.x-button-back:before, .x-toolbar .x-toolbar-dark .x-button.x-button-forward:before,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-back:before,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-forward:before, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-back:before, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-forward:before,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-back:before,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-forward:before, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-back:before, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-forward:before {
      background: #061f31; }
    .x-toolbar-dark .x-button, .x-toolbar-dark .x-button.x-button-back:after, .x-toolbar-dark .x-button.x-button-forward:after, .x-toolbar .x-toolbar-dark .x-button, .x-toolbar .x-toolbar-dark .x-button.x-button-back:after, .x-toolbar .x-toolbar-dark .x-button.x-button-forward:after,
    .x-toolbar-dark .x-field-select .x-component-outer,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-back:after,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-forward:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-back:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-forward:after,
    .x-toolbar-dark .x-field-select .x-component-outer:before,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-back:after,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-forward:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-back:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-forward:after {
      background-image: none;
      background-color: #11598c;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #1985d0), color-stop(3%, #1468a2), color-stop(100%, #0e4b75));
      background-image: -webkit-linear-gradient(top, #1985d0, #1468a2 3%, #0e4b75);
      background-image: linear-gradient(top, #1985d0, #1468a2 3%, #0e4b75); }
    .x-toolbar-dark .x-button .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-dark .x-button .x-button-icon.x-icon-mask,
    .x-toolbar-dark .x-field-select .x-component-outer .x-button-icon.x-icon-mask, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer .x-button-icon.x-icon-mask,
    .x-toolbar-dark .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask {
      background-image: none;
      background-color: white;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ffffff), color-stop(3%, #ffffff), color-stop(100%, #e8f4fc));
      background-image: -webkit-linear-gradient(top, #ffffff, #ffffff 3%, #e8f4fc);
      background-image: linear-gradient(top, #ffffff, #ffffff 3%, #e8f4fc); }
    .x-toolbar-dark .x-button.x-button-pressing, .x-toolbar-dark .x-button.x-button-pressing:after, .x-toolbar-dark .x-button.x-button-pressed, .x-toolbar-dark .x-button.x-button-pressed:after, .x-toolbar-dark .x-button.x-button-active, .x-toolbar-dark .x-button.x-button-active:after, .x-toolbar .x-toolbar-dark .x-button.x-button-pressing, .x-toolbar .x-toolbar-dark .x-button.x-button-pressing:after, .x-toolbar .x-toolbar-dark .x-button.x-button-pressed, .x-toolbar .x-toolbar-dark .x-button.x-button-pressed:after, .x-toolbar .x-toolbar-dark .x-button.x-button-active, .x-toolbar .x-toolbar-dark .x-button.x-button-active:after,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressing,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressing:after,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressed,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressed:after,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-active,
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-active:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressing, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressing:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressed, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-pressed:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-active, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer.x-button-active:after,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressing,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressing:after,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressed,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressed:after,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-active,
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-active:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressing, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressing:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressed, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-pressed:after, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-active, .x-toolbar
    .x-toolbar-dark .x-field-select .x-component-outer:before.x-button-active:after {
      background-image: none;
      background-color: #0f517e;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0a3351), color-stop(10%, #0c4267), color-stop(65%, #0f517e), color-stop(100%, #0f5280));
      background-image: -webkit-linear-gradient(top, #0a3351, #0c4267 10%, #0f517e 65%, #0f5280);
      background-image: linear-gradient(top, #0a3351, #0c4267 10%, #0f517e 65%, #0f5280); }
  .x-toolbar-dark .x-form-label {
    color: white;
    text-shadow: rgba(0, 0, 0, 0.5) 0 -0.08em 0; }

.x-toolbar-light {
  background-image: none;
  background-color: #1985d0;
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #4ca9e9), color-stop(3%, #1e93e4), color-stop(100%, #1676b9));
  background-image: -webkit-linear-gradient(top, #4ca9e9, #1e93e4 3%, #1676b9);
  background-image: linear-gradient(top, #4ca9e9, #1e93e4 3%, #1676b9);
  border-color: black; }
  .x-toolbar-light .x-title {
    color: white;
    text-shadow: rgba(0, 0, 0, 0.5) 0 -0.08em 0; }
  .x-toolbar-light.x-docked-top {
    border-bottom-color: black; }
  .x-toolbar-light.x-docked-bottom {
    border-top-color: black; }
  .x-toolbar-light.x-docked-left {
    border-right-color: black; }
  .x-toolbar-light.x-docked-right {
    border-left-color: black; }
  .x-toolbar-light .x-button, .x-toolbar .x-toolbar-light .x-button, .x-toolbar-light .x-field-select .x-component-outer, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer, .x-toolbar-light .x-field-select .x-component-outer:before, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before {
    border: 1px solid #0b3c5e;
    border-top-color: #0e4b75;
    color: white; }
    .x-toolbar-light .x-button.x-button-back:before, .x-toolbar-light .x-button.x-button-forward:before, .x-toolbar .x-toolbar-light .x-button.x-button-back:before, .x-toolbar .x-toolbar-light .x-button.x-button-forward:before, .x-toolbar-light .x-field-select .x-component-outer.x-button-back:before, .x-toolbar-light .x-field-select .x-component-outer.x-button-forward:before, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-back:before, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-forward:before, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-back:before, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-forward:before, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-back:before, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-forward:before {
      background: #0b3c5e; }
    .x-toolbar-light .x-button, .x-toolbar-light .x-button.x-button-back:after, .x-toolbar-light .x-button.x-button-forward:after, .x-toolbar .x-toolbar-light .x-button, .x-toolbar .x-toolbar-light .x-button.x-button-back:after, .x-toolbar .x-toolbar-light .x-button.x-button-forward:after, .x-toolbar-light .x-field-select .x-component-outer, .x-toolbar-light .x-field-select .x-component-outer.x-button-back:after, .x-toolbar-light .x-field-select .x-component-outer.x-button-forward:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-back:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-forward:after, .x-toolbar-light .x-field-select .x-component-outer:before, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-back:after, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-forward:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-back:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-forward:after {
      background-image: none;
      background-color: #1676b9;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #359ee7), color-stop(3%, #1985d0), color-stop(100%, #1468a2));
      background-image: -webkit-linear-gradient(top, #359ee7, #1985d0 3%, #1468a2);
      background-image: linear-gradient(top, #359ee7, #1985d0 3%, #1468a2); }
    .x-toolbar-light .x-button .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-light .x-button .x-button-icon.x-icon-mask, .x-toolbar-light .x-field-select .x-component-outer .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer .x-button-icon.x-icon-mask, .x-toolbar-light .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask {
      background-image: none;
      background-color: white;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ffffff), color-stop(3%, #ffffff), color-stop(100%, #e8f4fc));
      background-image: -webkit-linear-gradient(top, #ffffff, #ffffff 3%, #e8f4fc);
      background-image: linear-gradient(top, #ffffff, #ffffff 3%, #e8f4fc); }
    .x-toolbar-light .x-button.x-button-pressing, .x-toolbar-light .x-button.x-button-pressing:after, .x-toolbar-light .x-button.x-button-pressed, .x-toolbar-light .x-button.x-button-pressed:after, .x-toolbar-light .x-button.x-button-active, .x-toolbar-light .x-button.x-button-active:after, .x-toolbar .x-toolbar-light .x-button.x-button-pressing, .x-toolbar .x-toolbar-light .x-button.x-button-pressing:after, .x-toolbar .x-toolbar-light .x-button.x-button-pressed, .x-toolbar .x-toolbar-light .x-button.x-button-pressed:after, .x-toolbar .x-toolbar-light .x-button.x-button-active, .x-toolbar .x-toolbar-light .x-button.x-button-active:after, .x-toolbar-light .x-field-select .x-component-outer.x-button-pressing, .x-toolbar-light .x-field-select .x-component-outer.x-button-pressing:after, .x-toolbar-light .x-field-select .x-component-outer.x-button-pressed, .x-toolbar-light .x-field-select .x-component-outer.x-button-pressed:after, .x-toolbar-light .x-field-select .x-component-outer.x-button-active, .x-toolbar-light .x-field-select .x-component-outer.x-button-active:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-pressing, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-pressing:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-pressed, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-pressed:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-active, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer.x-button-active:after, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressing, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressing:after, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressed, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressed:after, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-active, .x-toolbar-light .x-field-select .x-component-outer:before.x-button-active:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressing, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressing:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressed, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-pressed:after, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-active, .x-toolbar .x-toolbar-light .x-field-select .x-component-outer:before.x-button-active:after {
      background-image: none;
      background-color: #156eac;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #0f517e), color-stop(10%, #125f95), color-stop(65%, #156eac), color-stop(100%, #156fae));
      background-image: -webkit-linear-gradient(top, #0f517e, #125f95 10%, #156eac 65%, #156fae);
      background-image: linear-gradient(top, #0f517e, #125f95 10%, #156eac 65%, #156fae); }
  .x-toolbar-light .x-form-label {
    color: white;
    text-shadow: rgba(0, 0, 0, 0.5) 0 -0.08em 0; }

.x-toolbar-neutral {
  background-image: none;
  background-color: #e0e0e0;
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ffffff), color-stop(3%, #ededed), color-stop(100%, #d3d3d3));
  background-image: -webkit-linear-gradient(top, #ffffff, #ededed 3%, #d3d3d3);
  background-image: linear-gradient(top, #ffffff, #ededed 3%, #d3d3d3);
  border-color: #616161; }
  .x-toolbar-neutral .x-title {
    color: #070707;
    text-shadow: rgba(255, 255, 255, 0.25) 0 0.08em 0; }
  .x-toolbar-neutral.x-docked-top {
    border-bottom-color: #616161; }
  .x-toolbar-neutral.x-docked-bottom {
    border-top-color: #616161; }
  .x-toolbar-neutral.x-docked-left {
    border-right-color: #616161; }
  .x-toolbar-neutral.x-docked-right {
    border-left-color: #616161; }
  .x-toolbar-neutral .x-button, .x-toolbar .x-toolbar-neutral .x-button, .x-toolbar-neutral .x-field-select .x-component-outer, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer, .x-toolbar-neutral .x-field-select .x-component-outer:before, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before {
    border: 1px solid #a0a0a0;
    border-top-color: #adadad;
    color: black; }
    .x-toolbar-neutral .x-button.x-button-back:before, .x-toolbar-neutral .x-button.x-button-forward:before, .x-toolbar .x-toolbar-neutral .x-button.x-button-back:before, .x-toolbar .x-toolbar-neutral .x-button.x-button-forward:before, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-back:before, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-forward:before, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-back:before, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-forward:before, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-back:before, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-forward:before, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-back:before, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-forward:before {
      background: #a0a0a0; }
    .x-toolbar-neutral .x-button, .x-toolbar-neutral .x-button.x-button-back:after, .x-toolbar-neutral .x-button.x-button-forward:after, .x-toolbar .x-toolbar-neutral .x-button, .x-toolbar .x-toolbar-neutral .x-button.x-button-back:after, .x-toolbar .x-toolbar-neutral .x-button.x-button-forward:after, .x-toolbar-neutral .x-field-select .x-component-outer, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-back:after, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-forward:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-back:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-forward:after, .x-toolbar-neutral .x-field-select .x-component-outer:before, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-back:after, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-forward:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-back:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-forward:after {
      background-image: none;
      background-color: #d3d3d3;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #fafafa), color-stop(3%, #e0e0e0), color-stop(100%, #c7c7c7));
      background-image: -webkit-linear-gradient(top, #fafafa, #e0e0e0 3%, #c7c7c7);
      background-image: linear-gradient(top, #fafafa, #e0e0e0 3%, #c7c7c7); }
    .x-toolbar-neutral .x-button .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-neutral .x-button .x-button-icon.x-icon-mask, .x-toolbar-neutral .x-field-select .x-component-outer .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer .x-button-icon.x-icon-mask, .x-toolbar-neutral .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask {
      background-image: none;
      background-color: black;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #262626), color-stop(3%, #0d0d0d), color-stop(100%, #000000));
      background-image: -webkit-linear-gradient(top, #262626, #0d0d0d 3%, #000000);
      background-image: linear-gradient(top, #262626, #0d0d0d 3%, #000000); }
    .x-toolbar-neutral .x-button.x-button-pressing, .x-toolbar-neutral .x-button.x-button-pressing:after, .x-toolbar-neutral .x-button.x-button-pressed, .x-toolbar-neutral .x-button.x-button-pressed:after, .x-toolbar-neutral .x-button.x-button-active, .x-toolbar-neutral .x-button.x-button-active:after, .x-toolbar .x-toolbar-neutral .x-button.x-button-pressing, .x-toolbar .x-toolbar-neutral .x-button.x-button-pressing:after, .x-toolbar .x-toolbar-neutral .x-button.x-button-pressed, .x-toolbar .x-toolbar-neutral .x-button.x-button-pressed:after, .x-toolbar .x-toolbar-neutral .x-button.x-button-active, .x-toolbar .x-toolbar-neutral .x-button.x-button-active:after, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressing, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressing:after, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressed, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressed:after, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-active, .x-toolbar-neutral .x-field-select .x-component-outer.x-button-active:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressing, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressing:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressed, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-pressed:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-active, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer.x-button-active:after, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressing, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressing:after, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressed, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressed:after, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-active, .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-active:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressing, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressing:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressed, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-pressed:after, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-active, .x-toolbar .x-toolbar-neutral .x-field-select .x-component-outer:before.x-button-active:after {
      background-image: none;
      background-color: #cccccc;
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #b2b2b2), color-stop(10%, #bfbfbf), color-stop(65%, #cccccc), color-stop(100%, #cdcdcd));
      background-image: -webkit-linear-gradient(top, #b2b2b2, #bfbfbf 10%, #cccccc 65%, #cdcdcd);
      background-image: linear-gradient(top, #b2b2b2, #bfbfbf 10%, #cccccc 65%, #cdcdcd); }
  .x-toolbar-neutral .x-form-label {
    color: #070707;
    text-shadow: rgba(255, 255, 255, 0.25) 0 0.08em 0; }

.x-toolbar.x-toolbar-neutral .x-toolbar-inner .x-button.x-button-pressing {
  background-image: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 24, color-stop(0%, rgba(122, 191, 239, 0.7)), color-stop(100%, rgba(122, 191, 239, 0)));
  background-image: -webkit-radial-gradient(rgba(122, 191, 239, 0.7), rgba(122, 191, 239, 0) 24px);
  background-image: radial-gradient(rgba(122, 191, 239, 0.7), rgba(122, 191, 239, 0) 24px); }
  .x-toolbar.x-toolbar-neutral .x-toolbar-inner .x-button.x-button-pressing .x-button-icon.x-button-mask {
    background-image: none;
    background-color: white;
    background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #e6e6e6), color-stop(10%, #f2f2f2), color-stop(65%, #ffffff), color-stop(100%, #ffffff));
    background-image: -webkit-linear-gradient(top, #e6e6e6, #f2f2f2 10%, #ffffff 65%, #ffffff);
    background-image: linear-gradient(top, #e6e6e6, #f2f2f2 10%, #ffffff 65%, #ffffff); }

.x-navigation-bar .x-container {
  overflow: visible; }

/******************************************************************
CONVERT IMAGES TO COMPASS SPRITE MAPS
******************************************************************/
.spr-sprite, #fedt-mand-spa .x-list-pullrefresh .x-list-pullrefresh-arrow, .venue-meta section.hours:before, .venue-meta section.location:before, .venue-meta section.feedback:before, #quickd-deals article[id*=deal_] .deal-content > footer .awesome-badge, #quickd-deals article[id*=deal_].category.fooddrink footer .price:before, #quickd-deals article[id*=deal_].category.fooddrink footer time:before, #quickd-deals article[id*=deal_].category.shopping footer .price:before, #quickd-deals article[id*=deal_].category.shopping footer time:before, #quickd-deals article[id*=deal_].category.experience footer .price:before, #quickd-deals article[id*=deal_].category.experience footer time:before, #quickd-deals article[id*=deal_].category.nightlife footer .price:before, #quickd-deals article[id*=deal_].category.nightlife footer time:before {
  background: url('../images/spr-s0dfef7407a.png') no-repeat; }

/******************************************************************
BUTTONS
******************************************************************/
.x-button.x-button-sencha, .x-toolbar .x-button.x-button-sencha, .x-button.x-button-sencha-round, .x-toolbar .x-button.x-button-sencha-round, .x-button.x-button-sencha-small, .x-toolbar .x-button.x-button-sencha-small {
  border: 1px solid #174b1e;
  border-top-color: #1c5f26;
  color: white; }
  .x-button.x-button-sencha.x-button-back:before, .x-button.x-button-sencha.x-button-forward:before, .x-toolbar .x-button.x-button-sencha.x-button-back:before, .x-toolbar .x-button.x-button-sencha.x-button-forward:before, .x-button.x-button-sencha-round.x-button-back:before, .x-button.x-button-sencha-round.x-button-forward:before, .x-toolbar .x-button.x-button-sencha-round.x-button-back:before, .x-toolbar .x-button.x-button-sencha-round.x-button-forward:before, .x-button.x-button-sencha-small.x-button-back:before, .x-button.x-button-sencha-small.x-button-forward:before, .x-toolbar .x-button.x-button-sencha-small.x-button-back:before, .x-toolbar .x-button.x-button-sencha-small.x-button-forward:before {
    background: #174b1e; }
  .x-button.x-button-sencha, .x-button.x-button-sencha.x-button-back:after, .x-button.x-button-sencha.x-button-forward:after, .x-toolbar .x-button.x-button-sencha, .x-toolbar .x-button.x-button-sencha.x-button-back:after, .x-toolbar .x-button.x-button-sencha.x-button-forward:after, .x-button.x-button-sencha-round, .x-button.x-button-sencha-round.x-button-back:after, .x-button.x-button-sencha-round.x-button-forward:after, .x-toolbar .x-button.x-button-sencha-round, .x-toolbar .x-button.x-button-sencha-round.x-button-back:after, .x-toolbar .x-button.x-button-sencha-round.x-button-forward:after, .x-button.x-button-sencha-small, .x-button.x-button-sencha-small.x-button-back:after, .x-button.x-button-sencha-small.x-button-forward:after, .x-toolbar .x-button.x-button-sencha-small, .x-toolbar .x-button.x-button-sencha-small.x-button-back:after, .x-toolbar .x-button.x-button-sencha-small.x-button-forward:after {
    background-image: none;
    background-color: #2e9a3e;
    background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #4bc95e), color-stop(50%, #34ae46), color-stop(51%, #2e9a3e), color-stop(100%, #288636));
    background-image: -webkit-linear-gradient(top, #4bc95e, #34ae46 50%, #2e9a3e 51%, #288636);
    background-image: linear-gradient(top, #4bc95e, #34ae46 50%, #2e9a3e 51%, #288636); }
  .x-button.x-button-sencha .x-button-icon.x-icon-mask, .x-toolbar .x-button.x-button-sencha .x-button-icon.x-icon-mask, .x-button.x-button-sencha-round .x-button-icon.x-icon-mask, .x-toolbar .x-button.x-button-sencha-round .x-button-icon.x-icon-mask, .x-button.x-button-sencha-small .x-button-icon.x-icon-mask, .x-toolbar .x-button.x-button-sencha-small .x-button-icon.x-icon-mask {
    background-image: none;
    background-color: white;
    background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #ffffff), color-stop(3%, #ffffff), color-stop(100%, #ebf9ed));
    background-image: -webkit-linear-gradient(top, #ffffff, #ffffff 3%, #ebf9ed);
    background-image: linear-gradient(top, #ffffff, #ffffff 3%, #ebf9ed); }
  .x-button.x-button-sencha.x-button-pressing, .x-button.x-button-sencha.x-button-pressing:after, .x-button.x-button-sencha.x-button-pressed, .x-button.x-button-sencha.x-button-pressed:after, .x-button.x-button-sencha.x-button-active, .x-button.x-button-sencha.x-button-active:after, .x-toolbar .x-button.x-button-sencha.x-button-pressing, .x-toolbar .x-button.x-button-sencha.x-button-pressing:after, .x-toolbar .x-button.x-button-sencha.x-button-pressed, .x-toolbar .x-button.x-button-sencha.x-button-pressed:after, .x-toolbar .x-button.x-button-sencha.x-button-active, .x-toolbar .x-button.x-button-sencha.x-button-active:after, .x-button.x-button-sencha-round.x-button-pressing, .x-button.x-button-sencha-round.x-button-pressing:after, .x-button.x-button-sencha-round.x-button-pressed, .x-button.x-button-sencha-round.x-button-pressed:after, .x-button.x-button-sencha-round.x-button-active, .x-button.x-button-sencha-round.x-button-active:after, .x-toolbar .x-button.x-button-sencha-round.x-button-pressing, .x-toolbar .x-button.x-button-sencha-round.x-button-pressing:after, .x-toolbar .x-button.x-button-sencha-round.x-button-pressed, .x-toolbar .x-button.x-button-sencha-round.x-button-pressed:after, .x-toolbar .x-button.x-button-sencha-round.x-button-active, .x-toolbar .x-button.x-button-sencha-round.x-button-active:after, .x-button.x-button-sencha-small.x-button-pressing, .x-button.x-button-sencha-small.x-button-pressing:after, .x-button.x-button-sencha-small.x-button-pressed, .x-button.x-button-sencha-small.x-button-pressed:after, .x-button.x-button-sencha-small.x-button-active, .x-button.x-button-sencha-small.x-button-active:after, .x-toolbar .x-button.x-button-sencha-small.x-button-pressing, .x-toolbar .x-button.x-button-sencha-small.x-button-pressing:after, .x-toolbar .x-button.x-button-sencha-small.x-button-pressed, .x-toolbar .x-button.x-button-sencha-small.x-button-pressed:after, .x-toolbar .x-button.x-button-sencha-small.x-button-active, .x-toolbar .x-button.x-button-sencha-small.x-button-active:after {
    background-image: none;
    background-color: #2a8e39;
    background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #1f6729), color-stop(10%, #257b31), color-stop(65%, #2a8e39), color-stop(100%, #2b903a));
    background-image: -webkit-linear-gradient(top, #1f6729, #257b31 10%, #2a8e39 65%, #2b903a);
    background-image: linear-gradient(top, #1f6729, #257b31 10%, #2a8e39 65%, #2b903a); }

/******************************************************************
GENERAL STYLES
******************************************************************/
#ext-mainview-1 {
  background: transparent; }

strong {
  font-weight: bold; }

body {
  background: url(../images/phone_startup.png) no-repeat;
  background-size: cover; }

/******************************************************************
WEB APP INSTALL
******************************************************************/
#quickd-install-webapp {
  background: url(../images/install-webapp/install-bg.jpg) no-repeat;
  background-size: cover; }
  #quickd-install-webapp #install-webapp-dialogue {
    position: absolute;
    width: 270px;
    height: 132px;
    left: 50%;
    bottom: 0; }
    #quickd-install-webapp #install-webapp-dialogue div {
      width: 100%;
      height: 100%;
      margin-left: -50%;
      background: url(../images/install-webapp/install-dialogue.png) no-repeat;
      background-size: 100%;
      -webkit-transform: translateY(1000px) scale(1);
      -webkit-animation: bounceInDown 1s forwards 0.7s; }

@-webkit-keyframes bounceInDown {
  0% {
    opacity: 0;
    -webkit-transform: translateY(1000px) scale(0.5); }

  60% {
    opacity: 1;
    -webkit-transform: translateY(-30px) scale(1.05); }

  80% {
    -webkit-transform: translateY(10px) scale(0.9); }

  100% {
    -webkit-transform: translateY(0) scale(1); } }

/******************************************************************
TOOLBAR STYLES
******************************************************************/
.x-toolbar-sencha {
  background-image: none;
  background-color: rgba(0, 0, 0, 0.7);
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(38, 38, 38, 0.7)), color-stop(50%, rgba(13, 13, 13, 0.7)), color-stop(51%, rgba(0, 0, 0, 0.7)), color-stop(100%, rgba(0, 0, 0, 0.7)));
  background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0.7), rgba(13, 13, 13, 0.7) 50%, rgba(0, 0, 0, 0.7) 51%, rgba(0, 0, 0, 0.7));
  background-image: linear-gradient(top, rgba(38, 38, 38, 0.7), rgba(13, 13, 13, 0.7) 50%, rgba(0, 0, 0, 0.7) 51%, rgba(0, 0, 0, 0.7));
  border-color: rgba(0, 0, 0, 0.7); }
  .x-toolbar-sencha .x-title {
    color: rgba(217, 217, 217, 0.7);
    text-shadow: rgba(0, 0, 0, 0.5) 0 -0.08em 0; }
  .x-toolbar-sencha.x-docked-top {
    border-bottom-color: rgba(0, 0, 0, 0.7); }
  .x-toolbar-sencha.x-docked-bottom {
    border-top-color: rgba(0, 0, 0, 0.7); }
  .x-toolbar-sencha.x-docked-left {
    border-right-color: rgba(0, 0, 0, 0.7); }
  .x-toolbar-sencha.x-docked-right {
    border-left-color: rgba(0, 0, 0, 0.7); }
  .x-toolbar-sencha .x-button, .x-toolbar .x-toolbar-sencha .x-button, .x-toolbar-sencha .x-field-select .x-component-outer, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer, .x-toolbar-sencha .x-field-select .x-component-outer:before, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before {
    border: 1px solid rgba(0, 0, 0, 0.7);
    border-top-color: rgba(0, 0, 0, 0.7);
    color: rgba(217, 217, 217, 0.7); }
    .x-toolbar-sencha .x-button.x-button-back:before, .x-toolbar-sencha .x-button.x-button-forward:before, .x-toolbar .x-toolbar-sencha .x-button.x-button-back:before, .x-toolbar .x-toolbar-sencha .x-button.x-button-forward:before, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-back:before, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-forward:before, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-back:before, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-forward:before, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-back:before, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-forward:before, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-back:before, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-forward:before {
      background: rgba(0, 0, 0, 0.7); }
    .x-toolbar-sencha .x-button, .x-toolbar-sencha .x-button.x-button-back:after, .x-toolbar-sencha .x-button.x-button-forward:after, .x-toolbar .x-toolbar-sencha .x-button, .x-toolbar .x-toolbar-sencha .x-button.x-button-back:after, .x-toolbar .x-toolbar-sencha .x-button.x-button-forward:after, .x-toolbar-sencha .x-field-select .x-component-outer, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-back:after, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-forward:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-back:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-forward:after, .x-toolbar-sencha .x-field-select .x-component-outer:before, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-back:after, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-forward:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-back:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-forward:after {
      background-image: none;
      background-color: rgba(0, 0, 0, 0.7);
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(38, 38, 38, 0.7)), color-stop(50%, rgba(13, 13, 13, 0.7)), color-stop(51%, rgba(0, 0, 0, 0.7)), color-stop(100%, rgba(0, 0, 0, 0.7)));
      background-image: -webkit-linear-gradient(top, rgba(38, 38, 38, 0.7), rgba(13, 13, 13, 0.7) 50%, rgba(0, 0, 0, 0.7) 51%, rgba(0, 0, 0, 0.7));
      background-image: linear-gradient(top, rgba(38, 38, 38, 0.7), rgba(13, 13, 13, 0.7) 50%, rgba(0, 0, 0, 0.7) 51%, rgba(0, 0, 0, 0.7)); }
    .x-toolbar-sencha .x-button .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-sencha .x-button .x-button-icon.x-icon-mask, .x-toolbar-sencha .x-field-select .x-component-outer .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer .x-button-icon.x-icon-mask, .x-toolbar-sencha .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before .x-button-icon.x-icon-mask {
      background-image: none;
      background-color: rgba(255, 255, 255, 0.7);
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(255, 255, 255, 0.7)), color-stop(3%, rgba(255, 255, 255, 0.7)), color-stop(100%, rgba(242, 242, 242, 0.7)));
      background-image: -webkit-linear-gradient(top, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 3%, rgba(242, 242, 242, 0.7));
      background-image: linear-gradient(top, rgba(255, 255, 255, 0.7), rgba(255, 255, 255, 0.7) 3%, rgba(242, 242, 242, 0.7)); }
    .x-toolbar-sencha .x-button.x-button-pressing, .x-toolbar-sencha .x-button.x-button-pressing:after, .x-toolbar-sencha .x-button.x-button-pressed, .x-toolbar-sencha .x-button.x-button-pressed:after, .x-toolbar-sencha .x-button.x-button-active, .x-toolbar-sencha .x-button.x-button-active:after, .x-toolbar .x-toolbar-sencha .x-button.x-button-pressing, .x-toolbar .x-toolbar-sencha .x-button.x-button-pressing:after, .x-toolbar .x-toolbar-sencha .x-button.x-button-pressed, .x-toolbar .x-toolbar-sencha .x-button.x-button-pressed:after, .x-toolbar .x-toolbar-sencha .x-button.x-button-active, .x-toolbar .x-toolbar-sencha .x-button.x-button-active:after, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressing, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressing:after, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressed, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressed:after, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-active, .x-toolbar-sencha .x-field-select .x-component-outer.x-button-active:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressing, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressing:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressed, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-pressed:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-active, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer.x-button-active:after, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressing, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressing:after, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressed, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressed:after, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-active, .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-active:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressing, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressing:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressed, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-pressed:after, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-active, .x-toolbar .x-toolbar-sencha .x-field-select .x-component-outer:before.x-button-active:after {
      background-image: none;
      background-color: rgba(0, 0, 0, 0.7);
      background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(0, 0, 0, 0.7)), color-stop(10%, rgba(0, 0, 0, 0.7)), color-stop(65%, rgba(0, 0, 0, 0.7)), color-stop(100%, rgba(1, 1, 1, 0.7)));
      background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 10%, rgba(0, 0, 0, 0.7) 65%, rgba(1, 1, 1, 0.7));
      background-image: linear-gradient(top, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 10%, rgba(0, 0, 0, 0.7) 65%, rgba(1, 1, 1, 0.7)); }
  .x-toolbar-sencha .x-form-label {
    color: rgba(217, 217, 217, 0.7);
    text-shadow: rgba(0, 0, 0, 0.5) 0 -0.08em 0; }

.x-toolbar-sencha .x-title {
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.8); }

#quickd-topbar {
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #dddddd), color-stop(2%, #868686), color-stop(49%, #3c3c3c), color-stop(50%, #2f2f2f), color-stop(97%, #252525), color-stop(100%, #555555));
  background-image: -webkit-linear-gradient(#dddddd 0%, #868686 2%, #3c3c3c 49%, #2f2f2f 50%, #252525 97%, #555555 100%);
  background-image: linear-gradient(#dddddd 0%, #868686 2%, #3c3c3c 49%, #2f2f2f 50%, #252525 97%, #555555 100%);
  border-bottom: thin solid #333; }
  #quickd-topbar .x-toolbar-inner .x-button, #quickd-topbar .x-toolbar-inner .x-button-back, #quickd-topbar .x-toolbar-inner .x-component-outer {
    background-color: transparent;
    border: thin solid black;
    -webkit-box-shadow: 0 1px 0 rgba(255, 255, 255, 0.24);
    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.24);
    background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #6e6e6e), color-stop(5%, #828282), color-stop(49%, #525252), color-stop(50%, #303030), color-stop(100%, #191919));
    background-image: -webkit-linear-gradient(#6e6e6e 0%, #828282 5%, #525252 49%, #303030 50%, #191919 100%);
    background-image: linear-gradient(#6e6e6e 0%, #828282 5%, #525252 49%, #303030 50%, #191919 100%); }
    #quickd-topbar .x-toolbar-inner .x-button *[class*='-label'], #quickd-topbar .x-toolbar-inner .x-button-back *[class*='-label'], #quickd-topbar .x-toolbar-inner .x-component-outer *[class*='-label'] {
      font: bold 12px/1 "Helvetica Neue", sans-serif;
      color: white;
      text-shadow: 0 -1px 0 black;
      opacity: 0.95;
      overflow: visible; }
  #quickd-topbar .x-toolbar-inner .x-button:after, #quickd-topbar .x-toolbar-inner .x-button:before {
    background-color: transparent;
    border-top: thin solid black;
    border-bottom: thin solid black;
    border-left: thin solid black;
    background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #6e6e6e), color-stop(5%, #828282), color-stop(49%, #525252), color-stop(50%, #303030), color-stop(100%, #191919));
    background-image: -webkit-linear-gradient(#6e6e6e 0%, #828282 5%, #525252 49%, #303030 50%, #191919 100%);
    background-image: linear-gradient(#6e6e6e 0%, #828282 5%, #525252 49%, #303030 50%, #191919 100%); }

/******************************************************************
PULL REFRESH
******************************************************************/
#fedt-mand-spa .x-list-pullrefresh .x-list-pullrefresh-arrow {
  background-position: 0 -130px;
  width: 24px;
  height: 26px;
  background-size: initial;
  -webkit-transform: rotation(0deg);
  transform: rotation(0deg);
  -webkit-transition: all 0.7s ease-in-out;
  transition: all 0.7s ease-in-out; }
#fedt-mand-spa .x-list-pullrefresh-release .x-list-pullrefresh-arrow {
  -webkit-animation: spin-that-shit 0.85s infinite linear; }
#fedt-mand-spa .x-list-pullrefresh-release.x-list-pullrefresh-loading .x-list-pullrefresh-arrow {
  -webkit-animation: spin-that-shit 0.3s infinite linear; }
#fedt-mand-spa .x-list-pullrefresh-wrap, #fedt-mand-spa .x-loading-spinner {
  display: none; }

@-webkit-keyframes spin-that-shit {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }

  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

/******************************************************************
SINGLE DEAL
******************************************************************/
#deal-bg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

#quickd-deal-slider {
  height: 170px; }

#quickd-deal-content {
  margin-top: 170px; }

#deal-bg, #quickd-single .x-body > .x-inner {
  background-image: -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, #222222), color-stop(100%, #0c0c0c));
  background-image: -webkit-linear-gradient(#222222, #0c0c0c);
  background-image: linear-gradient(#222222, #0c0c0c);
  color: white; }

#quickd-single .x-body > .x-inner #quickd-deal-slider {
  height: 185px;
  width: 100%; }
  #quickd-single .x-body > .x-inner #quickd-deal-slider .infoBox {
    padding: 5px 0 0 5px; }
  #quickd-single .x-body > .x-inner #quickd-deal-slider .linethrough {
    text-decoration: line-through; }
  #quickd-single .x-body > .x-inner #quickd-deal-slider .title {
    font-weight: bold;
    text-transform: uppercase; }
  #quickd-single .x-body > .x-inner #quickd-deal-slider .information {
    color: #808080; }
#quickd-single .x-body > .x-inner .deal-info .rightPanel {
  margin-left: 7px; }
#quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml .deal-wrap {
  position: absolute; }
#quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-] {
  position: relative;
  padding: 19px 10px 108px;
  background: url(../images/deal-bg.png) repeat;
  background-size: 50px 50px;
  border-top: 4px solid red;
  color: #575757;
  text-shadow: 0 1px 0 white;
  font-size: 14px;
  line-height: 21px;
  -webkit-box-shadow: 0 -1px 0 rgba(255, 255, 255, 0.37), 0 -5px 13px 7px black;
  box-shadow: 0 -1px 0 rgba(255, 255, 255, 0.37), 0 -5px 13px 7px black; }
  #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-] strong {
    color: #141414; }
  #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-].shopping {
    border-color: #697299; }
  #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-].experience {
    border-color: #5da2a0; }
  #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-].fooddrink {
    border-color: #c09159; }
  #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-].nightlife {
    border-color: #a25d7a; }
  #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-] > section:not(.venue) {
    padding-bottom: 38px;
    margin-bottom: 33px;
    background: url(../images/stippled-line.png) repeat-x bottom left; }
  #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml article[id*=deal-]:after {
    position: absolute;
    display: block;
    margin-left: -5%;
    width: 105%;
    height: 500px;
    top: 100%;
    background: url(../images/deal-bg.png) repeat;
    background-size: 50px 50px;
    content: ''; }
#quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml h1, #quickd-single .x-body > .x-inner #quickd-deal-content .x-innerhtml h2 {
  font-size: 33px;
  line-height: 34px;
  font-weight: bold;
  color: #131313;
  letter-spacing: 0;
  margin-bottom: 28px; }

.venue {
  background: none;
  margin-bottom: 0; }
  .venue .venue-thumb {
    width: 107%;
    margin-left: -10px;
    margin-bottom: 10px; }

.venue-meta {
  font-size: 14px;
  line-height: 25px; }
  .venue-meta section {
    position: relative;
    border-bottom: thin solid #cfd0d1;
    box-shadow: 0 1px 0 rgba(255, 255, 255, 0.7);
    padding: 12px 10px 12px 47px;
    margin-left: -10px;
    width: 107%; }
    .venue-meta section:first-child {
      border-top: thin solid #cfd0d1;
      box-shadow: 0 1px 0 rgba(255, 255, 255, 0.4), inset 0 1px 0 rgba(255, 255, 255, 0.7);
      margin-top: 52px; }
    .venue-meta section.hours {
      position: relative; }
      .venue-meta section.hours ul {
        width: 95%; }
      .venue-meta section.hours li {
        display: -webkit-box;
        display: box;
        -webkit-box-orient: horizontal;
        box-orient: horizontal; }
      .venue-meta section.hours .day, .venue-meta section.hours .leader, .venue-meta section.hours time {
        display: block; }
      .venue-meta section.hours .leader {
        -webkit-box-flex: 1;
        box-flex: 1;
        border-bottom: thin dashed #CCC;
        margin: 0 5px 7px; }
    .venue-meta section:before {
      content: '';
      display: block;
      position: absolute;
      top: 12px;
      left: 10px; }
    .venue-meta section.hours:before {
      background-position: 0 -156px;
      height: 25px;
      width: 24px; }
    .venue-meta section.location:before {
      background-position: 0 -200px;
      height: 25px;
      width: 15px; }
    .venue-meta section.feedback:before {
      top: 16px;
      background-position: 0 -181px;
      height: 19px;
      width: 25px; }
    .venue-meta section a, .venue-meta section a:hover, .venue-meta section a:visited {
      color: inherit; }

/******************************************************************
DEALS LIST
******************************************************************/
#quickd-beta-screen {
  background: #EEE;
  border: 1px solid #000;
  padding: 0; }
  #quickd-beta-screen .x-form-fieldset {
    margin-bottom: 0; }
  #quickd-beta-screen input, #quickd-beta-screen textarea {
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    -webkit-transition: border linear 0.2s, box-shadow linear 0.2s;
    -moz-transition: border linear 0.2s, box-shadow linear 0.2s;
    -ms-transition: border linear 0.2s, box-shadow linear 0.2s;
    -o-transition: border linear 0.2s, box-shadow linear 0.2s;
    transition: border linear 0.2s, box-shadow linear 0.2s; }
  #quickd-beta-screen input:focus,
  #quickd-beta-screen textarea:focus {
    border-color: rgba(82, 168, 236, 0.8);
    outline: 0;
    outline: thin dotted \9;
    /* IE6-9 */
    -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(82, 168, 236, 0.6);
    -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(82, 168, 236, 0.6);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(82, 168, 236, 0.6); }
  #quickd-beta-screen .x-form-fieldset-title {
    font-size: 17px;
    margin: 0em 0em 0.6em; }
    #quickd-beta-screen .x-form-fieldset-title .x-innerhtml {
      text-align: center; }
  #quickd-beta-screen #requestKeyButton {
    background: none;
    border: none;
    font-weight: 0;
    color: blue; }
    #quickd-beta-screen #requestKeyButton .x-button-label {
      font-weight: 0; }
  #quickd-beta-screen #betakeyField, #quickd-beta-screen .x-body, #quickd-beta-screen .x-form-fieldset-inner {
    background: none; }
  #quickd-beta-screen .x-form-fieldset-instructions {
    margin-top: 0.2em; }
  #quickd-beta-screen .errorField .x-innerhtml {
    font-style: italic;
    font-size: 12px;
    text-align: center;
    margin-top: 0.2em;
    color: red; }
  #quickd-beta-screen .x-field {
    min-height: 0; }
  #quickd-beta-screen .x-form-fieldset-inner,
  #quickd-beta-screen .x-form-fieldset,
  #quickd-beta-screen .x-field-text {
    border: none; }
  #quickd-beta-screen input,
  #quickd-beta-screen textarea,
  #quickd-beta-screen select,
  #quickd-beta-screen .uneditable-input {
    display: inline-block;
    height: 40px;
    background: white;
    font-size: 15px;
    line-height: 18px;
    color: #555555;
    border: 1px solid #cccccc;
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    border-radius: 3px; }
  #quickd-beta-screen #loginWithFacebook {
    background: #29447e url(http://static.ak.fbcdn.net/rsrc.php/v1/yL/r/FGFbc80dUKj.png);
    background-repeat: no-repeat;
    border-radius: 0;
    border: 0;
    background-position: left -99px;
    font-size: 14px;
    line-height: 14px;
    cursor: pointer;
    display: inline-block;
    padding: 0 0 0 1px;
    text-decoration: none;
    outline: none; }
    #quickd-beta-screen #loginWithFacebook span {
      background: #5f78ab url(http://static.ak.fbcdn.net/rsrc.php/v1/yL/r/FGFbc80dUKj.png);
      border-top: solid 1px #879AC0;
      border-bottom: solid 1px #1A356E;
      color: white;
      display: block;
      font-family: "lucida grande",tahoma,verdana,arial,sans-serif;
      font-weight: bold;
      padding: 10px 0px 10px 0px;
      margin: 1px 1px 0 38px;
      text-shadow: none; }

#quickd-deals {
  background: url("../images/bg-pattern.png");
  opacity: 0;
  -webkit-animation: fade-in 0.2s 0.1s ease-in-out forwards;
  /* list item wrapping element */ }
  #quickd-deals .x-list {
    background: transparent; }
  #quickd-deals .x-list .x-list-item .x-list-item-label {
    padding: 0;
    overflow: hidden; }
  #quickd-deals .x-list-item {
    margin: 10px 7px;
    background: white;
    -webkit-border-radius: 3px;
    border-radius: 3px;
    opacity: 0;
    -webkit-animation: fade-in 0.2s 0.2s ease-in-out forwards; }
    #quickd-deals .x-list-item:after {
      display: block;
      position: absolute;
      bottom: -14px;
      width: 100%;
      height: 14px;
      background: url("../images/shadow.png");
      background-size: 100% 14px;
      content: ''; }
    #quickd-deals .x-list-item .x-list-item-label {
      border: none;
      padding: 0; }
  #quickd-deals article[id*=deal_] {
    position: relative;
    opacity: 0;
    -webkit-animation: fade-in 0.1s 0.28s ease-in-out forwards; }
    #quickd-deals article[id*=deal_] img.deal_image {
      margin-left: 5px; }
    #quickd-deals article[id*=deal_] .deal-content {
      margin-left: 84px;
      padding-top: 7px; }
      #quickd-deals article[id*=deal_] .deal-content h1 {
        width: 85%;
        font: bold 15px/16px "Helvetica Neue", sans-serif;
        color: #333;
        -webkit-text-overflow: ellipsis;
        -moz-text-overflow: ellipsis;
        -o-text-overflow: ellipsis;
        -ms-text-overflow: ellipsis;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden; }
      #quickd-deals article[id*=deal_] .deal-content h2, #quickd-deals article[id*=deal_] .deal-content > footer {
        font: normal italic 13px/16px "Helvetica Neue", sans-serif;
        color: #a5a5a5; }
      #quickd-deals article[id*=deal_] .deal-content h2 {
        margin-top: 3px; }
      #quickd-deals article[id*=deal_] .deal-content > footer {
        font-style: italic;
        margin-top: 8px;
        font-size: 11px; }
        #quickd-deals article[id*=deal_] .deal-content > footer .price, #quickd-deals article[id*=deal_] .deal-content > footer time {
          position: relative;
          padding-left: 17px; }
          #quickd-deals article[id*=deal_] .deal-content > footer .price:not(:first-child), #quickd-deals article[id*=deal_] .deal-content > footer time:not(:first-child) {
            margin-left: 12px; }
          #quickd-deals article[id*=deal_] .deal-content > footer .price:before, #quickd-deals article[id*=deal_] .deal-content > footer time:before {
            position: absolute;
            top: 1px;
            left: 0;
            display: block;
            content: ''; }
        #quickd-deals article[id*=deal_] .deal-content > footer .price:before {
          background-position-x: 0; }
        #quickd-deals article[id*=deal_] .deal-content > footer time:before {
          background-position-x: -23px; }
        #quickd-deals article[id*=deal_] .deal-content > footer .awesome-badge {
          position: absolute;
          top: -3px;
          right: -3px;
          background-position: 0 -82px;
          height: 48px;
          width: 54px; }
          #quickd-deals article[id*=deal_] .deal-content > footer .awesome-badge .value {
            display: block;
            margin: 12px 0 0 24px;
            font: bold 12px/1 "Helvetica Neue", sans-serif;
            text-shadow: 0 1px 0 rgba(255, 255, 255, 0.45), 0 0 7px rgba(254, 240, 169, 0.33);
            text-transform: uppercase;
            letter-spacing: 1px;
            color: #292929;
            -webkit-transform: rotate(45deg);
            transform: rotate(45deg); }
    #quickd-deals article[id*=deal_]:not(.awesome) footer .awesome-badge {
      display: none; }
    #quickd-deals article[id*=deal_]:before {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 5px;
      height: 100%;
      -webkit-border-radius: 3px 0 0 3px;
      border-radius: 3px 0 0 3px;
      content: ''; }
    #quickd-deals article[id*=deal_].category.fooddrink footer {
      color: #c09159; }
    #quickd-deals article[id*=deal_].category.fooddrink footer .price:before {
      background-position: 0 -309px;
      height: 12px;
      width: 13px; }
    #quickd-deals article[id*=deal_].category.fooddrink footer time:before {
      background-position: 0 -225px;
      height: 12px;
      width: 12px; }
    #quickd-deals article[id*=deal_].category.fooddrink:before {
      background: #c09159; }
    #quickd-deals article[id*=deal_].category.shopping footer {
      color: #697299; }
    #quickd-deals article[id*=deal_].category.shopping footer .price:before {
      background-position: 0 -273px;
      height: 12px;
      width: 13px; }
    #quickd-deals article[id*=deal_].category.shopping footer time:before {
      background-position: 0 -261px;
      height: 12px;
      width: 12px; }
    #quickd-deals article[id*=deal_].category.shopping:before {
      background: #697299; }
    #quickd-deals article[id*=deal_].category.experience footer {
      color: #5da2a0; }
    #quickd-deals article[id*=deal_].category.experience footer .price:before {
      background-position: 0 -297px;
      height: 12px;
      width: 13px; }
    #quickd-deals article[id*=deal_].category.experience footer time:before {
      background-position: 0 -249px;
      height: 12px;
      width: 12px; }
    #quickd-deals article[id*=deal_].category.experience:before {
      background: #5da2a0; }
    #quickd-deals article[id*=deal_].category.nightlife footer {
      color: #a25d7a; }
    #quickd-deals article[id*=deal_].category.nightlife footer .price:before {
      background-position: 0 -285px;
      height: 12px;
      width: 13px; }
    #quickd-deals article[id*=deal_].category.nightlife footer time:before {
      background-position: 0 -237px;
      height: 12px;
      width: 12px; }
    #quickd-deals article[id*=deal_].category.nightlife:before {
      background: #a25d7a; }

@-webkit-keyframes fade-in {
  0% {
    opacity: 0; }

  100% {
    opacity: 1; } }

#quickd-deals #deal_no_deals .no-deal-content {
  padding: 20px; }
  #quickd-deals #deal_no_deals .no-deal-content h1 {
    margin-top: -10px;
    font-size: 73px;
    font-weight: bold;
    color: #222; }
  #quickd-deals #deal_no_deals .no-deal-content strong {
    color: #222; }
  #quickd-deals #deal_no_deals .no-deal-content p {
    color: #a5a5a5;
    margin-bottom: 20px; }
  #quickd-deals #deal_no_deals .no-deal-content a.facebook {
    font: 0/0 serif;
    text-shadow: none;
    color: transparent;
    display: block;
    width: 211px;
    height: 41px;
    margin: 36px auto 40px;
    background: url(../images/facebook-btn.png) no-repeat;
    background-size: 100%; }
